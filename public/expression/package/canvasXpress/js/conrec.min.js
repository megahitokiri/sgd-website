/*!
 * Copyright (c) 2010, Jason Davies.
 *
 * All rights reserved.  This code is based on Bradley White's Java version,
 * which is in turn based on Nicholas Yue's C++ version, which in turn is based
 * on Paul D. Bourke's original Fortran version.  See below for the respective
 * copyright notices.
 *
 * See http://paulbourke.net/papers/conrec for the original
 * paper by Paul D. Bourke.
 *
 * The vector conversion code is based on http://apptree.net/conrec.htm by
 * Graham Cox.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the <organization> nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
;
/*!
 * Copyright (c) 1996-1997 Nicholas Yue
 *
 * This software is copyrighted by Nicholas Yue. This code is based on Paul D.
 * Bourke's CONREC.F routine.
 *
 * The authors hereby grant permission to use, copy, and distribute this
 * software and its documentation for any purpose, provided that existing
 * copyright notices are retained in all copies and that this notice is
 * included verbatim in any distributions. Additionally, the authors grant
 * permission to modify this software and its documentation for any purpose,
 * provided that such modifications are not distributed without the explicit
 * consent of the authors and that existing copyright notices are retained in
 * all copies. Some of the algorithms implemented by this software are
 * patented, observe all applicable patent law.
 *
 * IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES THEREOF,
 * EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE IS
 * PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE NO
 * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
 * MODIFICATIONS.
 */
;var Conrec=(function(){var d=1e-20;var c=function(h,g){var f=h.x-g.x,i=h.y-g.y;return f*f+i*i<d};var e=function(h){var f=h.head;while(f){var g=f.next;f.next=f.prev;f.prev=g;f=g}var g=h.head;h.head=h.tail;h.tail=g};var b=function(f){this.level=f;this.s=null;this.count=0};b.prototype.remove_seq=function(f){if(f.prev){f.prev.next=f.next}else{this.s=f.next}if(f.next){f.next.prev=f.prev}--this.count};b.prototype.addSegment=function(k,j){var p=this.s;var m=null;var l=null;var o=false;var n=false;while(p){if(m==null){if(c(k,p.head.p)){m=p;o=true}else{if(c(k,p.tail.p)){m=p}}}if(l==null){if(c(j,p.head.p)){l=p;n=true}else{if(c(j,p.tail.p)){l=p}}}if(l!=null&&m!=null){break}else{p=p.next}}var i=((m!=null)?1:0)|((l!=null)?2:0);switch(i){case 0:var f={p:k,prev:null};var h={p:j,next:null};f.next=h;h.prev=f;m={head:f,tail:h,next:this.s,prev:null,closed:false};if(this.s){this.s.prev=m}this.s=m;++this.count;break;case 1:var g={p:j};if(o){g.next=m.head;g.prev=null;m.head.prev=g;m.head=g}else{g.next=null;g.prev=m.tail;m.tail.next=g;m.tail=g}break;case 2:var g={p:k};if(n){g.next=l.head;g.prev=null;l.head.prev=g;l.head=g}else{g.next=null;g.prev=l.tail;l.tail.next=g;l.tail=g}break;case 3:if(m===l){var g={p:m.tail.p,next:m.head,prev:null};m.head.prev=g;m.head=g;m.closed=true;break}switch((o?1:0)|(n?2:0)){case 0:e(m);case 1:l.tail.next=m.head;m.head.prev=l.tail;l.tail=m.tail;this.remove_seq(m);break;case 3:e(m);case 2:m.tail.next=l.head;l.head.prev=m.tail;m.tail=l.tail;this.remove_seq(l);break}}};var a=function(f){if(!f){var g=this;g.contours={};this.drawContour=function(j,i,o,n,m,l){var h=g.contours[l];if(!h){h=g.contours[l]=new b(m)}h.addSegment({x:j,y:i},{x:o,y:n})};this.contourList=function(){var m=[];var j=g.contours;for(var n in j){var p=j[n].s;var q=j[n].level;while(p){var o=p.head;var i=[];i.level=q;i.k=n;while(o&&o.p){i.push(o.p);o=o.next}m.push(i);p=p.next}}m.sort(function(k,h){return h.k-k.k});return m}}else{this.drawContour=f}this.h=new Array(5);this.sh=new Array(5);this.xh=new Array(5);this.yh=new Array(5)};a.prototype.contour=function(Q,L,P,r,u,B,A,t,v){var N=this.h,S=this.sh,D=this.xh,U=this.yh;var H=this.drawContour;this.contours={};var q=function(i,h){return(N[h]*D[i]-N[i]*D[h])/(N[h]-N[i])};var R=function(i,h){return(N[h]*U[i]-N[i]*U[h])/(N[h]-N[i])};var l;var g;var f;var s;var C;var E;var O=0;var M=0;var o=0;var n=0;var w=[0,1,1,0];var K=[0,0,1,1];var p=[[[0,0,8],[0,2,5],[7,6,9]],[[0,3,4],[1,3,1],[4,3,0]],[[9,6,7],[5,2,0],[8,0,0]]];for(var I=(u-1);I>=r;I--){for(var J=L;J<=P-1;J++){var V,T;V=Math.min(Q[J][I],Q[J][I+1]);T=Math.min(Q[J+1][I],Q[J+1][I+1]);C=Math.min(V,T);V=Math.max(Q[J][I],Q[J][I+1]);T=Math.max(Q[J+1][I],Q[J+1][I+1]);E=Math.max(V,T);if(E>=v[0]&&C<=v[t-1]){for(var G=0;G<t;G++){if(v[G]>=C&&v[G]<=E){for(var F=4;F>=0;F--){if(F>0){N[F]=Q[J+w[F-1]][I+K[F-1]]-v[G];D[F]=B[J+w[F-1]];U[F]=A[I+K[F-1]]}else{N[0]=0.25*(N[1]+N[2]+N[3]+N[4]);D[0]=0.5*(B[J]+B[J+1]);U[0]=0.5*(A[I]+A[I+1])}if(N[F]>0){S[F]=1}else{if(N[F]<0){S[F]=-1}else{S[F]=0}}}for(F=1;F<=4;F++){l=F;g=0;if(F!=4){f=F+1}else{f=1}s=p[S[l]+1][S[g]+1][S[f]+1];if(s!=0){switch(s){case 1:O=D[l];o=U[l];M=D[g];n=U[g];break;case 2:O=D[g];o=U[g];M=D[f];n=U[f];break;case 3:O=D[f];o=U[f];M=D[l];n=U[l];break;case 4:O=D[l];o=U[l];M=q(g,f);n=R(g,f);break;case 5:O=D[g];o=U[g];M=q(f,l);n=R(f,l);break;case 6:O=D[f];o=U[f];M=q(l,g);n=R(l,g);break;case 7:O=q(l,g);o=R(l,g);M=q(g,f);n=R(g,f);break;case 8:O=q(g,f);o=R(g,f);M=q(f,l);n=R(f,l);break;case 9:O=q(f,l);o=R(f,l);M=q(l,g);n=R(l,g);break;default:break}H(O,o,M,n,v[G],G)}}}}}}}};return a})();if(typeof exports!=="undefined"){exports.Conrec=Conrec};